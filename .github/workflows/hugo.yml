# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout代码并处理子模块
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true  # 如果不需要子模块，可设置为 false 或删除
          fetch-depth: 1    # 使用浅克隆加速

      # Step 2: 安装 Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.139.3"  # 指定 Hugo 版本
          extended: true           # 是否安装扩展版（一般需要）

      # Step 3: 配置 GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      # Step 4: 构建 Hugo 项目
      - name: Build with Hugo
        env:
          # 配置 Hugo 环境变量
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      # Step 5: 上传生成的静态文件
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
